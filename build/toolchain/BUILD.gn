# Copyright (c) 2023 SANCTUARY Systems GmbH
#
# This file is free software: you may copy, redistribute and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 2 of the License, or (at your
# option) any later version.
#
# This file is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# For a commercial license, please contact SANCTUARY Systems GmbH
# directly at info@sanctuary.dev
#
# This file incorporates work covered by the following copyright and
# permission notice:
#
#     Copyright 2018 The Hafnium Authors.
#
#     Use of this source code is governed by a BSD-style
#     license that can be found in the LICENSE file or at
#     https://opensource.org/licenses/BSD-3-Clause.

import("//build/toolchain/embedded.gni")
import("//build/toolchain/host.gni")

host_toolchain("host") {
  use_platform = false
}

# Toolchain for building tests which run under Linux under Hafnium.
embedded_clang_toolchain("aarch64_linux_clang") {
  target = "aarch64-linux-musleabi"

  # TODO: Remove //inc/system if we can stop using the version of stdatomic.h
  # from the Android prebuilt Clang.
  extra_cflags = "-nostdinc -isystem" +
                 rebase_path("//prebuilts/linux-aarch64/musl/include") + " -isystem" +
                 rebase_path("${toolchain_lib}/include")
                 
  if (use_prebuilt == true) {                 
    extra_cflags += " -isystem "  + rebase_path("//inc/system")
  }

  extra_defines = "-D_LIBCPP_HAS_MUSL_LIBC=1 -D_GNU_SOURCE=1"
  extra_ldflags = "-no-pie -lc --library-path=" +
                  rebase_path("//prebuilts/linux-aarch64/musl/lib/") + " " +
                  rebase_path("//prebuilts/linux-aarch64/musl/lib/crt1.o") + " " + rebase_path(
                      "${toolchain_lib}/lib/linux/libclang_rt.builtins-aarch64-android.a")

  toolchain_args = {
    use_platform = true
    plat_arch = "fake"
    plat_boot_flow = "//src/arch/fake:boot_flow"
    plat_console = "//src/arch/fake:console"
    plat_iommu = "//src/iommu:absent"
  }
}
